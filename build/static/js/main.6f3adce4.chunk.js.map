{"version":3,"sources":["components/Person.js","services/serverService.js","App.js","reportWebVitals.js","index.js"],"names":["Person","person","eliminatePerson","name","number","onClick","baseUrl","axios","get","newObject","post","id","put","delete","Filter","props","onChange","Phonebook","useState","message","setMessage","persons","filter","includes","map","find","n","serverService","then","response","alert","catch","error","NewPersonForm","onSubmit","submit","value","newName","handleNameChange","newNumber","handleNumberChange","type","Notification","className","App","setPersons","setNewName","setNewNumber","setFilter","errorMessage","setErrorMessage","useEffect","data","event","target","preventDefault","personObject","phone","console","log","obj","list","i","length","containsObject","concat","window","confirm","findId","setTimeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f3adce4.chunk.js","sourcesContent":["import React from 'react'\r\nconst Person = ({ person, eliminatePerson }) => {\r\n    return (\r\n      <li>{person.name}  {person.number}  <button onClick={eliminatePerson}>delete</button></li>\r\n    )\r\n  }\r\n  \r\n  export default Person","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  \r\n  return request\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request\r\n  \r\n}\r\n\r\nconst eliminate = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request\r\n}\r\n\r\nexport default { getAll, create, update, eliminate }","import React, { useState, useEffect } from 'react'\r\nimport Person from './components/Person'\r\nimport axios from 'axios'\r\nimport serverService from './services/serverService'\r\nimport './index.css'\r\n\r\nconst Filter = (props) => {\r\n\r\n  return(\r\n    <p>filter shown with  <input onChange={props.onChange}/></p>\r\n  )\r\n}\r\n\r\nconst Phonebook = (props) => {\r\n\r\n\r\n  const [message, setMessage] = useState('some message')\r\n\r\n  const eliminatePerson = (id) => {\r\n    const url = `http://localhost:3001/notes/${id}`\r\n    const note =  props.persons.find(n => n.id === id)\r\n    \r\n    serverService\r\n    .eliminate(id)\r\n    .then(response => {\r\n      setMessage('id ' + id + ' was deleted')\r\n      alert(message)\r\n    })\r\n    .catch(error => {\r\n      alert(\r\n        `the person '${id}' was already deleted from server`\r\n      )\r\n      \r\n    })\r\n    \r\n  \r\n    \r\n  }  \r\n\r\n  return(\r\n    <div><h2>Numbers</h2>\r\n \r\n    <ul>\r\n    {props.persons.filter(person => person.name.includes(props.filter)).map(person =>\r\n        <Person key={person.id} person={person} eliminatePerson={() => eliminatePerson(person.id)}/>\r\n        \r\n      )}\r\n    </ul></div>\r\n  )\r\n}\r\n\r\nconst NewPersonForm = (props) => {\r\n\r\n  return(\r\n    <form onSubmit={props.submit}>\r\n    <div>\r\n\r\n    <h2>Add a new number</h2>\r\n   \r\n<div>name: <input value={props.newName} onChange={props.handleNameChange} /></div>\r\n<div>number: <input value={props.newNumber} onChange={props.handleNumberChange}/></div>\r\n<div><button type=\"submit\">add</button></div>\r\n\r\n    </div>\r\n  </form>\r\n  )\r\n}\r\n\r\nconst Notification = ({ message, type }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  if (message.includes(\"Added\")){\r\n\r\n  return (\r\n    <div className=\"message\">\r\n      {message}\r\n    </div>\r\n  )}\r\n\r\n  return(\r\n    <div className=\"invisible\">\r\n      {message}\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [filter, setFilter] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\r\n\r\n  useEffect(() => {\r\n    serverService\r\n      .getAll()\r\n      .then(response => {\r\n      \r\n        setPersons(response.data)\r\n      })\r\n  }, [])\r\n\r\n\r\n  const handleMessageChange = (event) => {\r\n    setErrorMessage(event.target.value)\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n\r\n\r\n  const addName = (event) => {\r\n    event.preventDefault()\r\n    const personObject = {\r\n      name: newName,\r\n      phone: newNumber,\r\n    }\r\n\r\n    function containsObject(obj, list) {\r\n      var i;\r\n      for (i = 0; i < list.length; i++) {\r\n          if (list[i].name === obj.name) {\r\n           return true;\r\n          }\r\n      }\r\n      return false;\r\n  }\r\n\r\n  function findId(obj, list){\r\n    var i;\r\n    for (i=0; i < list.length; i++){\r\n      if (list[i].name === obj.name) {\r\n        return list[i].id;\r\n       }\r\n    }\r\n  }\r\n\r\n  console.log(personObject)\r\n  console.log(persons)\r\n\r\n\r\n  if (containsObject(personObject, persons) == false) {\r\n    serverService\r\n    .create(personObject)\r\n    .then(response => {\r\n      setPersons(persons.concat(response.data))\r\n      setNewName('')\r\n      setNewNumber('')\r\n      setErrorMessage(\"Added \" + personObject.name)\r\n    })\r\n  } else {\r\n    var r = window.confirm(`${newName} is already added to phonebook, replace the old number with the new one? `);\r\n              if (r==true){\r\n                var id = findId(personObject, persons)\r\n            \r\n                serverService\r\n                .update(id, personObject)\r\n                .then(response => {\r\n                  setPersons(persons.map(person => person.id !== id ? person : personObject))\r\n                \r\n                  setNewName('')\r\n                  setNewNumber('')\r\n                })\r\n                .catch(error => {   \r\n                   setErrorMessage(\r\n                  `Note '${personObject.name}' was already removed from server`\r\n                )\r\n                setTimeout(() => {\r\n                  setErrorMessage(null)\r\n                }, 5000)\r\n                \r\n              })\r\n              } else {\r\n                alert(\"ok\")\r\n              }\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n    \r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Notification message={errorMessage} />\r\n      <Filter  onChange={handleFilterChange}></Filter>\r\n      <NewPersonForm submit={addName} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange}></NewPersonForm>\r\n      <Phonebook persons={persons} filter={filter} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}